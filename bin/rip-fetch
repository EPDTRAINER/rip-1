#!/usr/bin/env ruby
# Usage: rip-fetch URL
#
# Downloads the package at URL to $RIPDIR/.packages using the appropriate
# transfer mechanism. Stores the package as PACKAGE-md5 where md5 is
# the hash of the URL from which it was retrieved.
#
# Prints the full path to the fetched package to standard out.
#
# Accepted transports:
#   git
#   hg
#   bzr
#   svn
#   curl + tar xzf
#   curl + tar xjf

$LOAD_PATH.unshift File.dirname(__FILE__) + "/../lib"
require 'rip/script'

def parse_git_rev(path, rev)
  ref = nil
  cd(path) do
    ref = `git rev-parse --verify --quiet #{rev}`
    return nil unless $?.success?
  end
  ref
end

target  = ARGV[0]
version = ARGV[1] || "master"
name    = target.split('/').last.chomp('.git')

cache = "#{CACHEDIR}/#{name}-#{Rip.md5(target)}"
ref   = nil

# Cache exists and we have a static reference
if File.directory?(cache)
  ref = parse_git_rev(cache, version)
  ref = nil unless ref =~ /^#{version}/
end

unless ref
  cache = `rip-fetch-cache #{target}`.chomp
  ref = parse_git_rev(cache, version) || abort("#{version} not found")
end

packages = "#{PACKAGEDIR}/#{name}-#{Rip.md5("#{target}#{ref}")}"

if File.directory?(packages)
  puts packages
elsif system("git clone #{cache} #{packages} &> /dev/null")
  cd packages
  system("git checkout --quiet #{ref} &> /dev/null")
  puts packages
else
  exit 1
end
