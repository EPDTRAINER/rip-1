#!/usr/bin/env ruby
# Usage: rip-fetch URL
#
# Downloads the package at URL to $RIPDIR/.packages using the appropriate
# transfer mechanism. Stores the package as PACKAGE-md5 where md5 is
# the hash of the URL from which it was retrieved.
#
# Prints the full path to the fetched package to standard out.
#
# Accepted transports:
#   git
#   hg
#   bzr
#   svn
#   curl + tar xzf
#   curl + tar xjf

$LOAD_PATH.unshift File.dirname(__FILE__) + "/../lib"
require 'rip/script'

target  = ARGV[0]

if ARGV[1] =~ /^\//
  path    = ARGV[1]
  version = ARGV[2]
else
  path    = "/"
  version = ARGV[1]
end

version ||= "master"
cache   = Rip::GitPackage.new(target).cache_path

ref = `rip-deref #{target} #{version}`.chomp
exit 1 if ref == ''

packages = Rip::GitPackage.new(target, path, ref).package_path

if File.directory?(packages)
  puts packages
elsif path == "/"
  system("git clone #{cache} #{packages} &> /dev/null") || exit(1)
  cd packages
  system("git checkout --quiet #{ref} &> /dev/null")
  puts packages
else
  base_package = `rip-fetch #{target} #{ref}`.chomp
  ln_s "#{base_package}#{path}", packages
  puts packages
end
