#!/usr/bin/env ruby
# Usage: rip-unpack-git URL

require 'rip/script'

target  = ARGV[0]

if ARGV[1] =~ /^\//
  path    = ARGV[1]
  version = ARGV[2]
else
  path    = "/"
  version = ARGV[1]
end

version ||= "master"


ref = sh "rip-deref-git #{target} #{version}"
package = Rip::GitPackage.new(target, path, ref)

packages = package.package_path

synchronize(packages) do
  if File.directory?(packages)
    puts packages
  elsif path == "/"
    cache = sh "rip-fetch-git #{target}"
    system("git clone #{cache} #{packages} &> /dev/null") || exit(1)
    cd packages
    system("git checkout --quiet #{ref} &> /dev/null")
    system("git remote rm origin &> /dev/null")
    system("git branch -D master &> /dev/null")
    puts packages
  else
    base_package = sh "rip-unpack #{target} #{ref}"
    if !File.exist?("#{base_package}#{path}")
      abort "#{target} #{path} does not exist"
    end
    ln_s "#{base_package}#{path}", packages
    puts packages
  end
end
