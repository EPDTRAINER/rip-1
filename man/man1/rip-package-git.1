.\" generated with Ronn/v0.5
.\" http://github.com/rtomayko/ronn/
.
.TH "RIP\-PACKAGE\-GIT" "1" "May 2010" "DEFUNKT" "rip manual"
.
.SH "NAME"
\fBrip\-package\-git\fR \-\- rip git package handler
.
.SH "SYNOPSIS"
rip\-package\-git \fIurl\fR [\fIversion\fR]
.
.SH "DESCRIPTION"
\fBrip\-package\-git\fR is a handler for fetching and unpacking git repositories. Prints package path on success.
.
.SH "HANDLES"
.
.IP "\(bu" 4
file://
.
.IP "\(bu" 4
git://
.
.IP "\(bu" 4
*.git
.
.IP "" 0
.
.SH "EXAMPLES"
You should not use \fBrip\-package\-git\fR directly. Use \fBrip\-package\fR which delegates to \fBrip\-package\-git\fR.
.
.P
Fetch a commit SHA (full and partial) or tags
.
.P
  rip\-package git://github.com/rack/rack.git e6ebd83
  rip\-package git://github.com/rack/rack.git 1.1
.
.P
Branches can also be fetched
.
.P
  rip\-package git://github.com/rack/rack.git master
  rip\-package git://github.com/rack/rack.git rack\-1.1
.
.P
If no branch or ref is given, "master" is fetched
.
.P
  rip\-package git://github.com/rack/rack.git
.
.SH "PERFORMANCE"
\fBrip\-package\-git\fR uses some nifty caching techniques to fetch your package quickly. For best results avoid floating versions like branches and stick to fixed references like tags or full SHAs. Floating versions will always perform slow network checks. For a more nerdy overview of how this works see the internals section.
.
.SH "INTERNALS"
A very simple and naive version of \fBrip\-package\-git\fR would reclone the entire repository every time.
.
.P
To avoid full repository clones, a bare repository is keep in \fB.rip/.cache\fR. Then we can simply run \fBgit fetch\fR to pull new changes. If you have verbose logging enabled, you'll see "fetching git://github.com/rack/rack.git" when a full clone is performed and "updating git://github.com/rack/rack.git" when a cached repo is being updated.
.
.P
Cached repos are then cloned into packages where the working directory is checked out to the correct tree. Packages are stored at:
.
.P
  \fB.rip/.packages/$name\-$md5($source $commit_ref)\fR
.
.P
The \fB$commit_ref\fR is always the full commit SHA. When a partial ref \fBe6ebd83\fR or a tag \fB1.1\fR is given, it is deferenced to the commit it is pointing at.
.
.P
Network checks can be avoided entirely in some situations. If a fixed ref or tag is given and it exists in the cache we can skip "updating" step.
.
.SH "SEE ALSO"
rip(1), rip\-package(1), git(1), \fIhttp://github.com/defunkt/rip\fR
