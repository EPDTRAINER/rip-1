rip-package-git(1) -- rip git package handler
=============================================

## SYNOPSIS

rip-package-git <url> [<version>]

## DESCRIPTION

`rip-package-git` is a handler for fetching and unpacking git
repositories. Prints package path on success. Exits with non-zero on
failure.

## HANDLES

  * file://
  * git://
  * *.git

## EXAMPLES

You should not use `rip-package-git` directly. Use `rip-package` which
delegates to `rip-package-git`.

Fetch a commit SHA (full and partial) or tags

  rip-package git://github.com/rack/rack.git e6ebd83
  rip-package git://github.com/rack/rack.git 1.1

Branches can also be fetched

  rip-package git://github.com/rack/rack.git master
  rip-package git://github.com/rack/rack.git rack-1.1

If no branch or ref is given, "master" is fetched

  rip-package git://github.com/rack/rack.git

## PERFORMANCE

`rip-package-git` uses some nifty caching techniques to fetch your
package quickly. For best results avoid floating versions like
branches and stick to fixed references like tags or full
SHAs. Floating versions will always perform slow network checks. For a
more nerdy overview of how this works see the internals section.

## INTERNALS

A very simple and naive version of `rip-package-git` would reclone the
entire repository every time.

To avoid full repository clones, a bare repository is keep in
`.rip/.cache`. Then we can simply run `git fetch` to pull new
changes. If you have verbose logging enabled, you'll see "fetching
git://github.com/rack/rack.git" when a full clone is performed and
"updating git://github.com/rack/rack.git" when a cached repo is being
updated.

Cached repos are then cloned into packages where the working directory
is checked out to the correct tree. Packages are stored at:

  `.rip/.packages/$name-$md5($source $commit_ref)`

The `$commit_ref` is always the full commit SHA. When a partial ref
`e6ebd83` or a tag `1.1` is given, it is deferenced to the commit it
is pointing at.

Network checks can be avoided entirely in some situations. If a fixed
ref or tag is given and it exists in the cache we can skip "updating"
step.

## SEE ALSO

rip(1), rip-package(1), git(1),
<http://hellorip.com/>
